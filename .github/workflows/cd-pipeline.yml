name: DevSecOps Pipeline

on:
  push:
    branches:
      - test
      - main

env:
  TWILIO_FROM: "whatsapp:+14155238886"
  TWILIO_TO: "whatsapp:+593TU_NUMERO_AQUI"
  ARGOCD_SERVER: "localhost:8080"
  ARGOCD_USERNAME: "admin"
  ARGOCD_PASSWORD: "admin"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build service1
        run: docker build -t service1 ./service1

      - name: Build service2
        run: docker build -t service2 ./service2

      - name: Build service3
        run: docker build -t service3 ./service3

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r service1/requirements.txt
          pip install -r service2/requirements.txt
          pip install -r service3/requirements.txt
          pip install pytest

      - name: Run tests service1
        run: pytest service1/

      - name: Run tests service2
        run: pytest service2/

      - name: Run tests service3
        run: pytest service3/

  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Trivy Scan - service1
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "service1"

      - name: Trivy Scan - service2
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "service2"

      - name: Trivy Scan - service3
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "service3"

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=your_project_key
            -Dsonar.organization=your_org
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v3

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Install kubeval
        run: |
          pip install kubeval || sudo apt-get install kubeval

      - name: Validate YAML manifests
        run: kubeval manifests/*.yaml || echo "Advertencias detectadas en YAMLs"

      - name: Login to ArgoCD
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure

      - name: Validar políticas de despliegue
        run: |
          argocd app get microservices-app
          estado=$(argocd app get microservices-app -o json | jq -r '.status.health.status')
          sync=$(argocd app get microservices-app -o json | jq -r '.status.sync.status')
          if [[ "$estado" != "Healthy" ]] && [[ "$sync" != "Synced" ]]; then
            echo "Error: La aplicación no está saludable o sincronizada"
            exit 1
          fi

      - name: Sincronizar con ArgoCD
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            argocd app sync microservices-test
            argocd app wait microservices-test --timeout 300
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            argocd app sync microservices-prod
            argocd app wait microservices-prod --timeout 300
          fi

      - name: Enviar notificación por WhatsApp
        run: |
          curl -X POST https://api.twilio.com/2010-04-01/Accounts/${{ secrets.TWILIO_SID }}/Messages.json \
            --data-urlencode "Body=✅ Despliegue exitoso en entorno ${{ github.ref_name }}" \
            --data-urlencode "From=${{ env.TWILIO_FROM }}" \
            --data-urlencode "To=${{ env.TWILIO_TO }}" \
            -u ${{ secrets.TWILIO_SID }}:${{ secrets.TWILIO_AUTH_TOKEN }}
